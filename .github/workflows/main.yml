# Sample workflow for building and deploying a Action-EJS site to GitHub Pages
name: Deploy action-ejs with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
#     - name: Setup Pages
#       uses: actions/configure-pages@v2
    - name: action-ejs
      # You may pin to the exact commit or the version.
      # uses: jaywcjlove/action-ejs@9744c37783fdb75ced4d793ebc1e7dfce0876a0d
      uses: jaywcjlove/action-ejs@v1.0.2
      with:
        # Your GITHUB_TOKEN
        ## token: # optional, default is ${{ github.token }}
        # Input ESJ template string
        template: <div><%= markdown %></div>
        # Input ESJ template file path.
        ## template-file: # optional
        # Read the contents of the file into a vars.
        vars-file: |
          {
            "markdown": "./README.md",
            "LICENSE": "./LICENSE"
          }
        # Input variables. A dictionary of variables in JSON format to be used in the template. 
        ## vars: # optional, default is {}
        # A JSON format string of options to be passed to the template engine.
        ## options: # optional, default is {}
        # output html path
        output: ./_site
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
# Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
